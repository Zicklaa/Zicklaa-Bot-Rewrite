# girlboss_cog.py
# -*- coding: utf-8 -*-
"""
Girlboss-Cog (discord.py 2.x, Slash-Command)
- /girlboss : postet eine zufÃ¤llige motivierende Girlboss-Nachricht und pingt die/den AusfÃ¼hrenden
- Nur bestimmte User dÃ¼rfen den Command nutzen (siehe GIRLBOSSES)
"""
from __future__ import annotations

import logging
import random
import discord
from discord import app_commands
from discord.ext import commands

from utils.logging_helper import log_event

logger = logging.getLogger("ZicklaaBotRewrite.Girlboss")

# -------------------- Daten --------------------

GIRLBOSS_MESSAGES: list[str] = [
    "You go Girl!",
    "Du schaffst das!",
    "Ich glaub an dich!",
    "Halte durch!",
    "Slay Queen!",
    "Gaslight, Gatekeep, Girlboss!",
    "Du bist eine starke und eigenstÃ¤ndige Frau!",
    "Ich bin so stolz auf deine Erfolge und Fortschritte!",
    "#BossQueen",
    "Wer kÃ¤mpft, kann verlieren. Wer nicht kÃ¤mpft, hat schon verloren.",
    "Es ist immer zu frÃ¼h, um aufzugeben.",
    "Jede schwierige Situation, die du jetzt meisterst, bleibt dir in der Zukunft erspart.",
    "Wenn Du etwas gesagt haben willst frage einen Mann; wenn Du etwas getan haben willst frage eine Frau.",
    "Das Leben ist hart, aber das bist du auch.",
    "Hab keine Angst, fÃ¼r dich selbst einzutreten. KÃ¤mpfe weiter fÃ¼r deine TrÃ¤ume!",
    "Vergiss niemals deinen eigenen Wert!",
    "Jeder Tag ist dein Tag!",
    "Alles ist mÃ¶glich, wenn du nur wirklich willst!",
    "Queens fix each otherâ€™s crowns. ðŸ‘‘",
    "Dein Future Self dankt dir jetzt schon.",
    "Nicht perfekt, aber **unstoppbar**.",
    "Erst trÃ¤umen, dann tun. Jetzt.",
    "Kleine Schritte, groÃŸe Wirkung.",
    "Deine Power ist ansteckend.",
    "Heute: Grenzen sprengen, Erwartungen toppen.",
    "Mehr Boss, weniger Stress.",
    "Du bist das ganze Paket â€“ mit Expressversand.",
    "Nochmal versuchen > Aufgeben.",
    "Mut > Angst. Immer.",
    "Was du heute startest, feierst du morgen.",
    "Wenn nicht du â€“ wer dann?",
    "Skalier deine Standards, nicht deine Zweifel.",
    "Du bist nicht 'zu viel' â€“ die Welt ist nur 'zu leise'.",
    "Ausstrahlung: unbezahlbar. Einstellung: unbesiegbar.",
    "Dein Hustle spricht fÃ¼r sich.",
    "Focus. Finish. Flex.",
    "Nicht warten bis es leichter wird â€“ **du** wirst stÃ¤rker.",
    "Reminder: Du bist die Hauptfigur. ðŸŽ¬",
]

# User, die /girlboss ausfÃ¼hren dÃ¼rfen
GIRLBOSSES: tuple[int, ...] = (
    200009451292459011,
    134574105109331968,
    288413759117066241,
    191119825353965568,
)

# -------------------- Cog --------------------


class Girlboss(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot

    @app_commands.command(name="girlboss", description="Schenkt dir eine zufÃ¤llige Girlboss-Power-Message âœ¨")
    async def girlboss(self, interaction: discord.Interaction):
        """
        Postet eine motivierende Girlboss-Nachricht und pingt die Person,
        die den Command ausgefÃ¼hrt hat â€“ nur fÃ¼r freigeschaltete User.
        """
        try:
            uid = interaction.user.id
            if uid not in GIRLBOSSES:
                # freundlich & nicht-spammy: ephemerer Hinweis
                await interaction.response.send_message(
                    "ðŸš« Dieser Befehl ist aktuell nur fÃ¼r ausgewÃ¤hlte Queens aktiviert.",
                    ephemeral=True,
                )
                log_event(
                    logger,
                    logging.INFO,
                    self.__class__.__name__,
                    "Access denied",
                    interaction.user,
                    uid,
                    command="/girlboss",
                )
                return

            # Ã¶ffentlich antworten, damit der Ping sichtbar ist
            await interaction.response.send_message(random.choice(GIRLBOSS_MESSAGES))
            log_event(
                logger,
                logging.INFO,
                self.__class__.__name__,
                "Message sent",
                interaction.user,
                uid,
                command="/girlboss",
            )

        except Exception as e:
            log_event(
                logger,
                logging.ERROR,
                self.__class__.__name__,
                "Execution failed",
                interaction.user,
                uid,
                command="/girlboss",
                error=e,
                exc_info=True,
            )
            # sichere Fallback-Antwort
            if interaction.response.is_done():
                await interaction.followup.send("Heute kein Girlbossen :/", ephemeral=True)
            else:
                await interaction.response.send_message("Heute kein Girlbossen :/", ephemeral=True)

# -------------------- Setup --------------------


async def setup(bot: commands.Bot):
    await bot.add_cog(Girlboss(bot))
